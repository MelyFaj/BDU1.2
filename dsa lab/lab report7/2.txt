#include<stdio.h>
#include<stdbool.h>
#include<string.h>


int top = -1;
char push(char *a, int n, int el){
    if(top==n-1){
        printf("Overflow!\n");
        return -1;
    }
    a[++top]=el;
    return 0;
}

char pop(char *a){
    if(top==-1){
        return -1;
    }
    top--;
    return a[top+1];
}

char peek(char *a){
    if(top==-1){
        printf("Empty stack\n");
        return -1;
    }
    return a[top];
}

bool isFull(int n){
    if(top==n-1){
        return true;
    }
    return false;
}

bool isEmpty(){
    if(top==-1){
        return true;
    }
    return false;
}

void display(char a[]){
    printf("Your stack:\n");
    for(int i=top; i>-1; i--){
        printf("%c\n", a[i]);
    }
}

int main(){
    char c, p[101], a[101];
    int j=0;
    
    for( ; ; ){
        scanf("%c", &c);
        //c[i+1]=')';
        if(c=='\n') break;
        if(c!='+' && c!='-' && c!='*' && c!='/' && c!='^' && c!='(' && c!=')'){
           p[j]=c;
           j++;
        }
        else if(c=='('){
            push(a, 101, c);
        }
        else if(c=='+' || c=='-' || c=='*' || c=='/' || c=='^'){
            if(c=='+' || c=='-'){
                for ( ; peek(a)=='+' || peek(a)=='-' || peek(a)=='*' || peek(a)=='/' || peek(a)=='^'; ){
                    p[j]=pop(a);
                    j++;
                }
            }
            else if(c=='*' || c=='/'){
                for ( ; peek(a)=='*' || peek(a)=='/' || peek(a)=='^'; ){
                    p[j]=pop(a);
                    j++;
                }
            }
            else if(c=='^'){
                for ( ; peek(a)=='^'; ){
                    p[j]=pop(a);
                    j++;
                }
            }
            push(a, 101, c);
            
        }
        else if(c==')'){
            for( ; peek(a)!='(' ; ){
                p[j]=pop(a);
                j++;
            }
            pop(a);
        }
    }
    for(int i=0; i<j; i++)
        printf("%c", p[i]);
    printf("\n");
    display(a);
    return 0;
}
