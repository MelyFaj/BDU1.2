//Traversing through an array
#include<stdio.h>
 void printArray(int a[], int n){
    int m;
    for(int i=0; i<n; i++){
        m=a[i];
        printf("%d ", m);
    }
 }


 int main(){
    int n, el;
    scanf("%d", &n);
    int a[n];
    for(int i=0; i<n; i++)
        scanf("%d", &a[i]);
        
    printArray(a, n);
    return 0;
 }



//Insertion

#include<stdio.h>
 int main(){
    int n, size, x, pos;
    scanf("%d", &size);
    int a[size];
    scanf("%d", &n);
    for(int i=0; i<n; i++)
        scanf("%d", &a[i]);

    for(int i=0; i<n; i++)
        printf("%d ", a[i]);
    printf("\n");
    if(n>=size)
        printf("No Free Space!");
    scanf("%d %d", &x, &pos);
    for(int i=n; i>=pos; i--)
        a[i+1]=a[i];
    a[pos]=x;
    n++;
    for(int i=0; i<n; i++)
        printf("%d ", a[i]);
    return 0;
 }






//deletion

#include<stdio.h>
 int main(){
    int n, size=100, x, pos;
    int a[size];
    scanf("%d", &n);
    for(int i=0; i<n; i++)
        scanf("%d", &a[i]);

    for(int i=0; i<n; i++)
        printf("%d ", a[i]);
    printf("\n");

    scanf("%d", &pos);
    for(int i=pos; i<n; i++)
        a[i]=a[i+1];

    n--;
    for(int i=0; i<n; i++)
        printf("%d ", a[i]);
    return 0;
 }







//binary search


#include<stdio.h>
 int main(){
    int n, size=100, x, pos, flag=0,h,l,m;
    int a[size];
    scanf("%d", &n);

    for(int i=0; i<n; i++)
        scanf("%d", &a[i]);
    for(int i=0; i<n-1; i++){
        for(int j=0; j<n-i-1; j++){
            if(a[j]>a[j+1]){
                int tmp = a[j];
                a[j] = a[j+1];
                a[j+1] = tmp;
            }
        }
    }
    for(int i=0; i<n; i++)
        printf("%d ", a[i]);
    printf("\n");
    scanf("%d", &x);

    l=0;
    h=n-1;

    for(; l<=h; ){
        m=(l+h)/2;
        if(a[m]==x){
            printf("Found in position (index): %d", m);
            flag=1;
            break;
        }
        else if(a[m]>x)
            h=m-1;
        else if(a[m]<x)
            l=m+1;
    }
    if(flag==0)
        printf("element not found");
    return 0;
 }

